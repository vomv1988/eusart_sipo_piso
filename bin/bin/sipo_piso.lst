gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 2-19-2013  19:08:17
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           	include		<coff.inc>
                                             list
                                           ; coff.inc - gputils header file
                                             nolist
                                           	include		<config.inc>
                                           ;; gputils_make_example, Copyright 2013 Vicente Oscar Mier Vela <vomv1988@gmail.com>
                                           ;;    This file is part of gputils_make_example.
                                           ;;
                                           ;;    gputils_make_example is free software: you can redistribute it and/or modify
                                           ;;    it under the terms of the GNU General Public License as published by
                                           ;;    the Free Software Foundation, either version 3 of the License, or
                                           ;;    (at your option) any later version.
                                           ;;
                                           ;;    gputils_make_example is distributed in the hope that it will be useful,
                                           ;;    but WITHOUT ANY WARRANTY; without even the implied warranty of
                                           ;;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                           ;;    GNU General Public License for more details.
                                           ;;
                                           ;;    You should have received a copy of the GNU General Public License
                                           ;;    along with gputils_make_example.  If not, see <http://www.gnu.org/licenses/>.
                                           	__CONFIG ( _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OFF & _MCLRE_OFF & _PWRTE_OFF & _WDT_OFF & _INTRC_OSC_NOCLKOUT )
                                           	include		<signals.inc>
                                           ;; gputils_make_example, Copyright 2013 Vicente Oscar Mier Vela <vomv1988@gmail.com>
                                           ;;    This file is part of gputils_make_example.
                                           ;;
                                           ;;    gputils_make_example is free software: you can redistribute it and/or modify
                                           ;;    it under the terms of the GNU General Public License as published by
                                           ;;    the Free Software Foundation, either version 3 of the License, or
                                           ;;    (at your option) any later version.
                                           ;;
                                           ;;    gputils_make_example is distributed in the hope that it will be useful,
                                           ;;    but WITHOUT ANY WARRANTY; without even the implied warranty of
                                           ;;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                           ;;    GNU General Public License for more details.
                                           ;;
                                           ;;    You should have received a copy of the GNU General Public License
                                           ;;    along with gputils_make_example.  If not, see <http://www.gnu.org/licenses/>.
                                           	variable	h
                                           h=0
                                           	while	h < 6
                                           S#v(h)	equ	~h
                                           h += 1
                                           	endw
                                           
                                           	extern		set_ports
                                           	extern		mv_rx_w
                                           	extern		mv_w_tx
                                           	extern		sipo
                                           	extern		piso
                                           	extern		loopback_sipo
                                           	extern		loopback_piso
                                           
                                           start	code		H'0000'
000000   2002     call	0x2                 	call		set_ports
000001   293e     goto	0x13e               	goto		main
                                           
                                           prog	code
                                           main:
00013e   20c9     call	0xc9                	call		loopback_sipo
00013f   2014     call	0x14                	call		loopback_piso
                                           aa:
000140   2940     goto	0x140               	goto		aa
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		set_ports
                                           
                                           	extern		set_anselh_ansel
                                           	extern		set_pinout_tris
                                           	extern		set_eusart_19200
                                           
                                           libsp	code
                                           set_ports:
000002   2088     call	0x88                	call		set_anselh_ansel	;;	<< Initial pinout / EUSART settings
000003   2006     call	0x6                 	call		set_pinout_tris		;;	<<
000004   209e     call	0x9e                	call		set_eusart_19200	;;	<<
000005   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		set_pinout_tris
                                           
                                           libsp	code
                                           set_pinout_tris:
000006   1683     bsf	0x3, 0x5             	banksel		TRISA		;;	<< These settings provide the following
000007   1303     bcf	0x3, 0x6             
000008   3009     movlw	0x9                	movlw		B'00001001'	;;	<< configuration for the physical terminals
000009   0085     movwf	0x5                	movwf		TRISA		;;	<< of the PIC16F690:
00000a   3020     movlw	0x20               	movlw		B'00100000'	;;	<<
00000b   0086     movwf	0x6                	movwf		TRISB		;;	<< PORT	PIN	I/O	NAME	FUNCTION
00000c   3000     movlw	0                  	movlw		B'00000000'	;;	<< RA3	4	I	DISIPO	Ser data in
00000d   0087     movwf	0x7                	movwf		TRISC		;;	<< RA5	2	O	DOSIPO	Ser data out
00000e   1283     bcf	0x3, 0x5             	banksel		PORTA		;;	   RA4	3	O	CKSIPO	Clock out
00000f   1303     bcf	0x3, 0x6             
000010   0185     clrf	0x5                 	clrf		PORTA		;;	   RC5	5	O	LDSIPO	Load D out
000011   0186     clrf	0x6                 	clrf		PORTB		;;	   RC4	6	O	CRSIPO	Clear out
000012   0187     clrf	0x7                 	clrf		PORTC		;;	   RA0	19	I	DIPISO	Ser data in
                                           					;;	   RA1	18	O	DOPISO	Ser data out
                                           					;;	   RA2	17	O	CKPISO	Clock out
                                           					;;	   RC0	16	O	LD1PISO	Load D1 out
                                           					;;	   RC2	14	O	LD2PISO	Load D2 out
                                           					;;	   RC1	15	O	CRPISO	Clear out
                                           					;;	   RB5	12	I	RX	RX in
                                           					;;	   RB7	10	O	TX	TX out
000013   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		loopback_piso
                                           
                                           	extern		clear_piso
                                           
                                           ;;	Remove following after test
                                           	extern		load_piso
                                           
                                           	extern		mv_w_tx
                                           	extern		mv_rx_w
                                           	extern		push_w_piso
                                           	extern		pop_piso_w
                                           
                                           	udata
                                           COUNT	res		1
                                           
                                           libsp	code
                                           loopback_piso:
000014   3003     movlw	0x3                	movlw		.3		;;	<< Prompt
000015   2080     call	0x80                	call		mv_w_tx
                                           	.direct		"c","Control.rx"
                                           	.direct		"c","Control.tx = 0x03"
000016   20c1     call	0xc1                	call		mv_rx_w
000017   00a0     movwf	0x20               	movwf		COUNT
000018   3a00     xorlw	0                  	xorlw		.0
000019   1903     btfsc	0x3, 0x2           	skpnz
00001a   2827     goto	0x27                	goto		finish
00001b   208f     call	0x8f                	call		clear_piso
                                           ;;	The following instruction simulates the clear_piso
                                           ;;	function for the ttl165 model of gpsim, but must
                                           ;;	be removed upon test completion:
00001c   2095     call	0x95                	call		load_piso
                                           push:
00001d   3004     movlw	0x4                	movlw		.4		;;	<< Prompt
00001e   2080     call	0x80                	call		mv_w_tx
                                           	.direct		"c","Control.rx"
                                           	.direct		"c","Control.tx = 0xF7"
00001f   20c1     call	0xc1                	call		mv_rx_w
000020   2028     call	0x28                	call		push_w_piso
000021   20bd     call	0xbd                	call		pop_piso_w
000022   2080     call	0x80                	call		mv_w_tx
000023   1283     bcf	0x3, 0x5             	banksel		COUNT
000024   1303     bcf	0x3, 0x6             
000025   0ba0     decfsz	0x20, f           	decfsz		COUNT,1
000026   281d     goto	0x1d                	goto		push
                                           finish:
000027   0008     return                   	return
                                           	end
                                           ;;	Push a byte into PISO daisychain, bit by bit. At the same time,
                                           ;;	with each pushed bit, record the popped bit on the other side of
                                           ;;	the daisychain, into a 1 byte register, until this register is
                                           ;;	filled.
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	variable	i
                                           
                                           	global		push_w_piso
                                           	global		FRPISO
                                           
                                           	udata
                                           TOPISO	res		1
                                           FRPISO	res		1
                                           
                                           libsp	code
                                           push_w_piso:
                                           ;;	This is pretty much the same as mv_w_sipo, except that with an
                                           ;;	interwined read function to record one bit at a time from the
                                           ;;	serial input terminal.
                                           
                                           ;;	Transmit the contents of WREG through DOPISO synchronously with CKPISO,
                                           ;;	storin theg the byte received through DIPISO in FRPISO global register.
                                           
                                           ;;	PORT	PIN	I/O	NAME	FUNCTION
                                           ;;	RA1	18	O	DOPISO	Ser data out
                                           ;;	RA2	17	O	CKPISO	Clock out
                                           ;;	RA0	19	I	DIPISO	Ser data in
                                           
000028   1283     bcf	0x3, 0x5             	banksel		PORTA
000029   1303     bcf	0x3, 0x6             
00002a   1085     bcf	0x5, 0x1             	bcf		PORTA,1
00002b   1105     bcf	0x5, 0x2             	bcf		PORTA,2
00002c   1005     bcf	0x5, 0               	bcf		PORTA,0
                                           
00002d   00a1     movwf	0x21               	movwf		TOPISO
00002e   01a2     clrf	0x22                	clrf		FRPISO
                                           
                                           i = 8
                                           	while		i > 0
                                           
00002f   1ba1     btfsc	0x21, 0x7          	btfsc		TOPISO,i-1
000030   1485     bsf	0x5, 0x1             	bsf		PORTA,1
000031   1fa1     btfss	0x21, 0x7          	btfss		TOPISO,i-1
000032   1085     bcf	0x5, 0x1             	bcf		PORTA,1
                                           
000033   1805     btfsc	0x5, 0             	btfsc		PORTA,0
000034   17a2     bsf	0x22, 0x7            	bsf		FRPISO,i-1
000035   1c05     btfss	0x5, 0             	btfss		PORTA,0
000036   13a2     bcf	0x22, 0x7            	bcf		FRPISO,i-1
                                           
000037   1505     bsf	0x5, 0x2             	bsf		PORTA,2
000038   1105     bcf	0x5, 0x2             	bcf		PORTA,2
                                           
                                           i -= 1
                                           	endw
                                           
00007f   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		mv_w_tx
                                           
                                           libsp	code
                                           mv_w_tx:
000080   1283     bcf	0x3, 0x5             	banksel		TXREG		;;	<< Move the contents of WREG to TXREG
000081   1303     bcf	0x3, 0x6             
000082   0099     movwf	0x19               	movwf		TXREG		;;	<<
                                           
000083   1683     bsf	0x3, 0x5             	banksel		TXSTA		;;	<< Pause execution until TRMT (TXSTA,1)
000084   1303     bcf	0x3, 0x6             
000085   1c98     btfss	0x18, 0x1          	btfss		TXSTA,1		;;	<< is set again. i.e. until the byte
000086   2885     goto	0x85                	goto		$-1		;;	<< transmission completes
000087   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		set_anselh_ansel
                                           
                                           libsp	code
                                           set_anselh_ansel:
000088   1283     bcf	0x3, 0x5             	banksel		ANSEL		;;	<< ANSELH:ANSEL Settings
000089   1703     bsf	0x3, 0x6             
00008a   019e     clrf	0x1e                	clrf		ANSEL		;;	<<
00008b   1283     bcf	0x3, 0x5             	banksel		ANSELH		;;	<<
00008c   1703     bsf	0x3, 0x6             
00008d   019f     clrf	0x1f                	clrf		ANSELH		;;	<<
00008e   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		clear_piso
                                           
                                           libsp	code
                                           clear_piso:
00008f   1283     bcf	0x3, 0x5             	banksel		PORTC
000090   1303     bcf	0x3, 0x6             
000091   1487     bsf	0x7, 0x1             	bsf		PORTC,1
000092   1087     bcf	0x7, 0x1             	bcf		PORTC,1
000093   1487     bsf	0x7, 0x1             	bsf		PORTC,1
000094   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		load_piso
                                           
                                           libsp	code
                                           load_piso:
000095   1283     bcf	0x3, 0x5             	banksel		PORTC
000096   1303     bcf	0x3, 0x6             
000097   1007     bcf	0x7, 0               	bcf		PORTC,0
000098   1407     bsf	0x7, 0               	bsf		PORTC,0
000099   1007     bcf	0x7, 0               	bcf		PORTC,0
00009a   1507     bsf	0x7, 0x2             	bsf		PORTC,2
00009b   1107     bcf	0x7, 0x2             	bcf		PORTC,2
00009c   1507     bsf	0x7, 0x2             	bsf		PORTC,2
00009d   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		set_eusart_19200
                                           
                                           libsp	code
                                           set_eusart_19200:
00009e   1283     bcf	0x3, 0x5             	banksel		INTCON		;;	<< These settings configure interrupt
00009f   1303     bcf	0x3, 0x6             
0000a0   138b     bcf	0xb, 0x7             	bcf		INTCON,7	;;	<< functions for the PIC16F690 EUSART.
0000a1   130b     bcf	0xb, 0x6             	bcf		INTCON,6	;;	<<
0000a2   1683     bsf	0x3, 0x5             	banksel		PIE1		;;	<<
0000a3   1303     bcf	0x3, 0x6             
0000a4   128c     bcf	0xc, 0x5             	bcf		PIE1,5		;;	<<
                                           
0000a5   1683     bsf	0x3, 0x5             	banksel		SPBRGH		;;	<< These settings assign the following
0000a6   1303     bcf	0x3, 0x6             
0000a7   019a     clrf	0x1a                	clrf		SPBRGH		;;	<< values to the PIC16F690 EUSART:
0000a8   1683     bsf	0x3, 0x5             	banksel		SPBRG		;;	<<
0000a9   1303     bcf	0x3, 0x6             
0000aa   300c     movlw	0xc                	movlw		D'12'		;;	<< FOSC		= 4 MHz
0000ab   0099     movwf	0x19               	movwf		SPBRG		;;	<< SYNC		= 0
0000ac   1683     bsf	0x3, 0x5             	banksel		BAUDCTL		;;	<< BRGH		= 1
0000ad   1303     bcf	0x3, 0x6             
0000ae   119b     bcf	0x1b, 0x3            	bcf		BAUDCTL,3	;;	<< BRG16	= 0
0000af   1683     bsf	0x3, 0x5             	banksel		TXSTA		;;	<< SPBRGH:SPBRG	= 12
0000b0   1303     bcf	0x3, 0x6             
0000b1   1518     bsf	0x18, 0x2            	bsf		TXSTA,2		;;	<< BR           = 19200
0000b2   1218     bcf	0x18, 0x4            	bcf		TXSTA,4		;;	<< ACTBR        = 19.23 k
0000b3   1198     bcf	0x18, 0x3            	bcf		TXSTA,3		;;	<< ERROR        = 0.16 %
0000b4   1698     bsf	0x18, 0x5            	bsf		TXSTA,5		;;	<<
0000b5   1318     bcf	0x18, 0x6            	bcf		TXSTA,6		;;	<<
0000b6   1283     bcf	0x3, 0x5             	banksel		RCSTA		;;	<<
0000b7   1303     bcf	0x3, 0x6             
0000b8   1198     bcf	0x18, 0x3            	bcf		RCSTA,3		;;	<<
0000b9   1618     bsf	0x18, 0x4            	bsf		RCSTA,4		;;	<<
0000ba   1318     bcf	0x18, 0x6            	bcf		RCSTA,6		;;	<<
0000bb   1798     bsf	0x18, 0x7            	bsf		RCSTA,7		;;	<<
0000bc   0008     return                   	return
                                           	end
                                           ;;	push_w_piso stores the byte popped from the other side of the
                                           ;;	daisychain into a register. Well, pop_piso_w stores that value
                                           ;;	in WREG.
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		pop_piso_w
                                           
                                           	extern		FRPISO
                                           
                                           libsp	code
                                           pop_piso_w:
0000bd   1283     bcf	0x3, 0x5             	banksel		FRPISO
0000be   1303     bcf	0x3, 0x6             
0000bf   0822     movf	0x22, w             	movfw		FRPISO
0000c0   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		mv_rx_w
                                           
                                           libsp	code
                                           mv_rx_w:
0000c1   1283     bcf	0x3, 0x5             	banksel		PIR1		;;	<< Pause execution until a whole byte
0000c2   1303     bcf	0x3, 0x6             
0000c3   1e8c     btfss	0xc, 0x5           	btfss		PIR1,5		;;	<< has been received and stored in register
0000c4   28c3     goto	0xc3                	goto		$-1		;;	<< RCREG via RX (RB5, pin 12)
                                           
0000c5   1283     bcf	0x3, 0x5             	banksel		RCREG		;;	<< Store the contents of RCREG in WREG.
0000c6   1303     bcf	0x3, 0x6             
0000c7   081a     movf	0x1a, w             	movfw		RCREG		;;	<<
0000c8   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		loopback_sipo
                                           
                                           	extern		clear_sipo
                                           	extern		mv_w_tx
                                           	extern		mv_rx_w
                                           	extern		push_w_sipo
                                           	extern		pop_sipo_w
                                           
                                           	udata
                                           COUNT	res		1
                                           
                                           libsp	code
                                           loopback_sipo:
0000c9   3005     movlw	0x5                	movlw		.5		;;	<< Prompt
0000ca   2080     call	0x80                	call		mv_w_tx
                                           	.direct		"c","Control.rx"
                                           	.direct		"c","Control.tx = 0x03"
0000cb   20c1     call	0xc1                	call		mv_rx_w
0000cc   00a3     movwf	0x23               	movwf		COUNT
0000cd   3a00     xorlw	0                  	xorlw		.0
0000ce   1903     btfsc	0x3, 0x2           	skpnz
0000cf   28db     goto	0xdb                	goto		finish
0000d0   2134     call	0x134               	call		clear_sipo
                                           push:
0000d1   3006     movlw	0x6                	movlw		.6		;;	<< Prompt
0000d2   2080     call	0x80                	call		mv_w_tx
                                           	.direct		"c","Control.rx"
                                           	.direct		"c","Control.tx = 0xF8"
0000d3   20c1     call	0xc1                	call		mv_rx_w
0000d4   20dc     call	0xdc                	call		push_w_sipo
0000d5   213a     call	0x13a               	call		pop_sipo_w
0000d6   2080     call	0x80                	call		mv_w_tx
0000d7   1283     bcf	0x3, 0x5             	banksel		COUNT
0000d8   1303     bcf	0x3, 0x6             
0000d9   0ba3     decfsz	0x23, f           	decfsz		COUNT,1
0000da   28d1     goto	0xd1                	goto		push
                                           ;;	goto		loopback_sipo
                                           finish:
0000db   0008     return                   	return
                                           	end
                                           ;;	Push a byte into SIPO daisychain, bit by bit. At the same time,
                                           ;;	with each pushed bit, record the popped bit on the other side of
                                           ;;	the daisychain, into a 1 byte register, until this register is
                                           ;;	filled.
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	variable	i
                                           
                                           	global		push_w_sipo
                                           	global		FRSIPO
                                           
                                           	udata
                                           TOSIPO	res		1
                                           FRSIPO	res		1
                                           
                                           libsp	code
                                           push_w_sipo:
                                           ;;	This is pretty much the same as mv_w_sipo, except that with an
                                           ;;	interwined read function to record one bit at a time from the
                                           ;;	serial input terminal.
                                           
                                           ;;	Transmit the contents of WREG through DOSIPO synchronously with CKSIPO,
                                           ;;	storin theg the byte received through DISIPO in FRSIPO global register.
                                           
                                           ;;	PORT	PIN	I/O	NAME	FUNCTION
                                           ;;	RA5	2	O	DOSIPO	Ser data out
                                           ;;	RA4	3	O	CKSIPO	Clock out
                                           ;;	RA3	4	I	DISIPO	Ser data in
                                           
0000dc   1283     bcf	0x3, 0x5             	banksel		PORTA
0000dd   1303     bcf	0x3, 0x6             
0000de   1285     bcf	0x5, 0x5             	bcf		PORTA,5
0000df   1205     bcf	0x5, 0x4             	bcf		PORTA,4
0000e0   1185     bcf	0x5, 0x3             	bcf		PORTA,3
                                           
0000e1   00a4     movwf	0x24               	movwf		TOSIPO
0000e2   01a5     clrf	0x25                	clrf		FRSIPO
                                           
                                           i = 8
                                           	while		i > 0
                                           
0000e3   1ba4     btfsc	0x24, 0x7          	btfsc		TOSIPO,i-1
0000e4   1685     bsf	0x5, 0x5             	bsf		PORTA,5
0000e5   1fa4     btfss	0x24, 0x7          	btfss		TOSIPO,i-1
0000e6   1285     bcf	0x5, 0x5             	bcf		PORTA,5
                                           
0000e7   1605     bsf	0x5, 0x4             	bsf		PORTA,4
0000e8   1205     bcf	0x5, 0x4             	bcf		PORTA,4
                                           
0000e9   1985     btfsc	0x5, 0x3           	btfsc		PORTA,3
0000ea   17a5     bsf	0x25, 0x7            	bsf		FRSIPO,i-1
0000eb   1d85     btfss	0x5, 0x3           	btfss		PORTA,3
0000ec   13a5     bcf	0x25, 0x7            	bcf		FRSIPO,i-1
                                           
                                           i -= 1
                                           	endw
                                           
000133   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		clear_sipo
                                           
                                           libsp	code
                                           clear_sipo:
000134   1283     bcf	0x3, 0x5             	banksel		PORTC
000135   1303     bcf	0x3, 0x6             
000136   1607     bsf	0x7, 0x4             	bsf		PORTC,4
000137   1207     bcf	0x7, 0x4             	bcf		PORTC,4
000138   1607     bsf	0x7, 0x4             	bsf		PORTC,4
000139   0008     return                   	return
                                           	end
                                           ;;	push_w_sipo stores the byte popped from the other side of the
                                           ;;	daisychain into a register. Well, pop_sipo_w stores that value
                                           ;;	in WREG.
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		pop_sipo_w
                                           
                                           	extern		FRSIPO
                                           
                                           libsp	code
                                           pop_sipo_w:
00013a   1283     bcf	0x3, 0x5             	banksel		FRSIPO
00013b   1303     bcf	0x3, 0x6             
00013c   0825     movf	0x25, w             	movfw		FRSIPO
00013d   0008     return                   	return
                                           	end
