gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 2-9-2013  14:23:06
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           	include		<coff.inc>
                                             list
                                           ; coff.inc - gputils header file
                                             nolist
                                           	include		<config.inc>
                                           ;; gputils_make_example, Copyright 2013 Vicente Oscar Mier Vela <vomv1988@gmail.com>
                                           ;;    This file is part of gputils_make_example.
                                           ;;
                                           ;;    gputils_make_example is free software: you can redistribute it and/or modify
                                           ;;    it under the terms of the GNU General Public License as published by
                                           ;;    the Free Software Foundation, either version 3 of the License, or
                                           ;;    (at your option) any later version.
                                           ;;
                                           ;;    gputils_make_example is distributed in the hope that it will be useful,
                                           ;;    but WITHOUT ANY WARRANTY; without even the implied warranty of
                                           ;;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                           ;;    GNU General Public License for more details.
                                           ;;
                                           ;;    You should have received a copy of the GNU General Public License
                                           ;;    along with gputils_make_example.  If not, see <http://www.gnu.org/licenses/>.
                                           	__CONFIG ( _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OFF & _MCLRE_OFF & _PWRTE_OFF & _WDT_OFF & _INTRC_OSC_NOCLKOUT )
                                           	include		<signals.inc>
                                           ;; gputils_make_example, Copyright 2013 Vicente Oscar Mier Vela <vomv1988@gmail.com>
                                           ;;    This file is part of gputils_make_example.
                                           ;;
                                           ;;    gputils_make_example is free software: you can redistribute it and/or modify
                                           ;;    it under the terms of the GNU General Public License as published by
                                           ;;    the Free Software Foundation, either version 3 of the License, or
                                           ;;    (at your option) any later version.
                                           ;;
                                           ;;    gputils_make_example is distributed in the hope that it will be useful,
                                           ;;    but WITHOUT ANY WARRANTY; without even the implied warranty of
                                           ;;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                                           ;;    GNU General Public License for more details.
                                           ;;
                                           ;;    You should have received a copy of the GNU General Public License
                                           ;;    along with gputils_make_example.  If not, see <http://www.gnu.org/licenses/>.
                                           	variable	h
                                           h=0
                                           	while	h < 6
                                           S#v(h)	equ	~h
                                           h += 1
                                           	endw
                                           
                                           	extern		set_ports
                                           	extern		mv_rx_w
                                           	extern		mv_w_tx
                                           
                                           start	code		H'0000'
000000   2849     goto	0x49                	goto		main
                                           
                                           prog	code
                                           main:
000049   2001     call	0x1                 	call		set_ports
                                           	.direct		"c","U1.tx=55"
00004a   2013     call	0x13                	call		mv_rx_w
00004b   201b     call	0x1b                	call		mv_w_tx
00004c   3081     movlw	0x81               	movlw		B'10000001'
00004d   201b     call	0x1b                	call		mv_w_tx
                                           aa:
00004e   284e     goto	0x4e                	goto		aa
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		set_ports
                                           
                                           	extern		set_anselh_ansel
                                           	extern		set_pinout_tris
                                           	extern		set_eusart_19200
                                           
                                           libsp	code
                                           set_ports:
000001   2023     call	0x23                	call		set_anselh_ansel	;;	<< Initial pinout / EUSART settings
000002   2005     call	0x5                 	call		set_pinout_tris		;;	<<
000003   202a     call	0x2a                	call		set_eusart_19200	;;	<<
000004   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		set_pinout_tris
                                           
                                           libsp	code
                                           set_pinout_tris:
000005   1683     bsf	0x3, 0x5             	banksel		TRISA		;;	<< These settings provide the following
000006   1303     bcf	0x3, 0x6             
000007   3009     movlw	0x9                	movlw		B'00001001'	;;	<< configuration for the physical terminals
000008   0085     movwf	0x5                	movwf		TRISA		;;	<< of the PIC16F690:
000009   3020     movlw	0x20               	movlw		B'00100000'	;;	<<
00000a   0086     movwf	0x6                	movwf		TRISB		;;	<< PORT	PIN	I/O	NAME	FUNCTION
00000b   3000     movlw	0                  	movlw		B'00000000'	;;	<< RA3	4	I	DISIPO	Ser data in
00000c   0087     movwf	0x7                	movwf		TRISC		;;	<< RA5	2	O	DOSIPO	Ser data out
00000d   1283     bcf	0x3, 0x5             	banksel		PORTA		;;	   RA4	3	O	CKSIPO	Clock out
00000e   1303     bcf	0x3, 0x6             
00000f   0185     clrf	0x5                 	clrf		PORTA		;;	   RC5	5	O	LDSIPO	Load D out
000010   0186     clrf	0x6                 	clrf		PORTB		;;	   RC4	6	O	CRSIPO	Clear out
000011   0187     clrf	0x7                 	clrf		PORTC		;;	   RA0	19	I	DIPISO	Ser data in
                                           					;;	   RA1	18	O	DOPISO	Ser data out
                                           					;;	   RA2	17	O	CKPISO	Clock out
                                           					;;	   RC0	16	O	LDPISO	Load D out
                                           					;;	   RC1	15	O	CRPISO	Clear out
                                           					;;	   RB5	12	I	RX	RX in
                                           					;;	   RB7	10	O	TX	TX out
000012   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		mv_rx_w
                                           
                                           libsp	code
                                           mv_rx_w:
000013   1283     bcf	0x3, 0x5             	banksel		PIR1		;;	<< Pause execution until a whole byte
000014   1303     bcf	0x3, 0x6             
000015   1e8c     btfss	0xc, 0x5           	btfss		PIR1,5		;;	<< has been received and stored in register
000016   2815     goto	0x15                	goto		$-1		;;	<< RCREG via RX (RB5, pin 12)
                                           
000017   1283     bcf	0x3, 0x5             	banksel		RCREG		;;	<< Store the contents of RCREG in WREG.
000018   1303     bcf	0x3, 0x6             
000019   081a     movf	0x1a, w             	movfw		RCREG		;;	<<
00001a   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		mv_w_tx
                                           
                                           libsp	code
                                           mv_w_tx:
00001b   1283     bcf	0x3, 0x5             	banksel		TXREG		;;	<< Move the contents of WREG to TXREG
00001c   1303     bcf	0x3, 0x6             
00001d   0099     movwf	0x19               	movwf		TXREG		;;	<<
                                           
00001e   1683     bsf	0x3, 0x5             	banksel		TXSTA		;;	<< Pause execution until TRMT (TXSTA,1)
00001f   1303     bcf	0x3, 0x6             
000020   1c98     btfss	0x18, 0x1          	btfss		TXSTA,1		;;	<< is set again. i.e. until the byte
000021   2820     goto	0x20                	goto		$-1		;;	<< transmission completes
000022   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		set_anselh_ansel
                                           
                                           libsp	code
                                           set_anselh_ansel:
000023   1283     bcf	0x3, 0x5             	banksel		ANSEL		;;	<< ANSELH:ANSEL Settings
000024   1703     bsf	0x3, 0x6             
000025   019e     clrf	0x1e                	clrf		ANSEL		;;	<<
000026   1283     bcf	0x3, 0x5             	banksel		ANSELH		;;	<<
000027   1703     bsf	0x3, 0x6             
000028   019f     clrf	0x1f                	clrf		ANSELH		;;	<<
000029   0008     return                   	return
                                           	end
                                           	processor	pic16f690
                                           	include		<p16f690.inc>
                                                   LIST
                                           ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                                                   NOLIST
                                           
                                           	global		set_eusart_19200
                                           
                                           libsp	code
                                           set_eusart_19200:
00002a   1283     bcf	0x3, 0x5             	banksel		INTCON		;;	<< These settings configure interrupt
00002b   1303     bcf	0x3, 0x6             
00002c   138b     bcf	0xb, 0x7             	bcf		INTCON,7	;;	<< functions for the PIC16F690 EUSART.
00002d   130b     bcf	0xb, 0x6             	bcf		INTCON,6	;;	<<
00002e   1683     bsf	0x3, 0x5             	banksel		PIE1		;;	<<
00002f   1303     bcf	0x3, 0x6             
000030   128c     bcf	0xc, 0x5             	bcf		PIE1,5		;;	<<
                                           
000031   1683     bsf	0x3, 0x5             	banksel		SPBRGH		;;	<< These settings assign the following
000032   1303     bcf	0x3, 0x6             
000033   019a     clrf	0x1a                	clrf		SPBRGH		;;	<< values to the PIC16F690 EUSART:
000034   1683     bsf	0x3, 0x5             	banksel		SPBRG		;;	<<
000035   1303     bcf	0x3, 0x6             
000036   300c     movlw	0xc                	movlw		D'12'		;;	<< FOSC		= 4 MHz
000037   0099     movwf	0x19               	movwf		SPBRG		;;	<< SYNC		= 0
000038   1683     bsf	0x3, 0x5             	banksel		BAUDCTL		;;	<< BRGH		= 1
000039   1303     bcf	0x3, 0x6             
00003a   119b     bcf	0x1b, 0x3            	bcf		BAUDCTL,3	;;	<< BRG16	= 0
00003b   1683     bsf	0x3, 0x5             	banksel		TXSTA		;;	<< SPBRGH:SPBRG	= 12
00003c   1303     bcf	0x3, 0x6             
00003d   1518     bsf	0x18, 0x2            	bsf		TXSTA,2		;;	<< BR           = 19200
00003e   1218     bcf	0x18, 0x4            	bcf		TXSTA,4		;;	<< ACTBR        = 19.23 k
00003f   1198     bcf	0x18, 0x3            	bcf		TXSTA,3		;;	<< ERROR        = 0.16 %
000040   1698     bsf	0x18, 0x5            	bsf		TXSTA,5		;;	<<
000041   1318     bcf	0x18, 0x6            	bcf		TXSTA,6		;;	<<
000042   1283     bcf	0x3, 0x5             	banksel		RCSTA		;;	<<
000043   1303     bcf	0x3, 0x6             
000044   1198     bcf	0x18, 0x3            	bcf		RCSTA,3		;;	<<
000045   1618     bsf	0x18, 0x4            	bsf		RCSTA,4		;;	<<
000046   1318     bcf	0x18, 0x6            	bcf		RCSTA,6		;;	<<
000047   1798     bsf	0x18, 0x7            	bsf		RCSTA,7		;;	<<
000048   0008     return                   	return
                                           	end
